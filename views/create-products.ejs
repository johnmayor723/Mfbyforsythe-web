<!-- Product Form -->
<div class="container mt-4 mb-5">
  <h2>Create Product</h2>
  <form action="/management/products/preview" method="POST" enctype="multipart/form-data" class="mb-5">
    <!-- Name -->
    <div class="mb-3">
      <label class="form-label">Name:</label>
      <input type="text" class="form-control" name="name" required>
    </div>

    <!-- Description -->
    <div class="mb-3">
      <label class="form-label">Description:</label>
      <textarea class="form-control" name="description" required></textarea>
    </div>

    <!-- Sizes -->
    <div class="mb-3">
      <label class="form-label">Select Sizes:</label>
      <div class="d-flex flex-wrap gap-2">
        <% ['XS', 'S', 'M', 'L', 'XL', 'XXL'].forEach(size => { %>
          <label><input type="checkbox" name="size" value="<%= size %>"> <%= size %></label>
        <% }); %>
      </div>
    </div>

    <!-- Price -->
    <div class="mb-3">
      <label class="form-label">Price:</label>
      <input type="number" class="form-control" name="price" required>
    </div>

    <!-- Colors -->
    <div class="mb-3">
      <label class="form-label">Select Colors:</label>
      <div class="d-flex flex-wrap gap-2">
        <% ['Black', 'White', 'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Pink', 'Gray', 'Brown', 'Beige', 'Orange', 'Teal', 'Navy', 'Burgundy', 'Olive', 'Mustard', 'Lavender', 'Turquoise'].forEach(color => { %>
          <label><input type="checkbox" name="colors" value="<%= color %>"> <%= color %></label>
        <% }); %>
      </div>
    </div>

    <!-- Image Upload -->
    <div class="mb-3">
      <label class="form-label">Upload Images:</label>
      <div id="imageUploads">
        <input type="file" class="form-control" name="images" accept="image/*">
      </div>
      <button type="button" class="btn btn-secondary mt-2" id="addImage">+ Add More Images</button>
    </div>

    <!-- Image Previews -->
    <div id="imagePreviews" class="mt-3 d-flex flex-wrap gap-2"></div>

    <!-- Category & Subcategory -->
    <div class="mb-3">
      <label class="form-label">Category:</label>
      <select id="categorySelect" class="form-select" required>
        <option value="">Select Category</option>
        <option value="Handbags">Handbags</option>
        <option value="Jackets">Jackets</option>
        <option value="Others">Other Categories</option>
      </select>
    </div>

    <div class="mb-3">
      <label class="form-label">Sub Category:</label>
      <select id="subcategorySelect" class="form-select" name="category" required>
        <option value="">Select Sub Category</option>
      </select>
    </div>

    <button type="submit" class="btn btn-primary">Create Product</button>
  </form>
</div>

<!-- Script -->
<script>
  const categoryMap = {
    Handbags: [
      { value: "crossbody-bag", label: "Crossbody Bag" },
      { value: "shoulder-bag", label: "Shoulder Bag" },
      { value: "clutch", label: "Clutch" },
      { value: "backpack", label: "Backpack" },
      { value: "duffel-bag", label: "Duffel Bag" },
      { value: "travel-set", label: "Travel Set" }
    ],
    Jackets: [
      { value: "blazer", label: "Blazer" },
      { value: "denim-jacket", label: "Denim Jacket" },
      { value: "winter-jacket", label: "Winter Jacket" },
      { value: "bomber-jacket", label: "Bomber Jacket" }
    ],
    Others: [
      { value: "t-shirt", label: "T-shirt" },
      { value: "dresses", label: "Dresses" },
      { value: "sets", label: "Sets" },
      { value: "kimono", label: "Kimono" },
      { value: "sweatshirts-hoodies", label: "Sweatshirts & Hoodies" },
      { value: "shirts", label: "Shirts" },
      { value: "sales", label: "Sales" }
    ]
  };

  const categorySelect = document.getElementById("categorySelect");
  const subcategorySelect = document.getElementById("subcategorySelect");

  categorySelect.addEventListener("change", () => {
    const selected = categorySelect.value;
    subcategorySelect.innerHTML = `<option value="">Select Sub Category</option>`;
    if (categoryMap[selected]) {
      categoryMap[selected].forEach(sub => {
        const option = document.createElement("option");
        option.value = sub.value;
        option.textContent = sub.label;
        subcategorySelect.appendChild(option);
      });
    }
  });

  function createPreview(file) {
    const reader = new FileReader();
    reader.onload = function (e) {
      const img = document.createElement('img');
      img.src = e.target.result;
      img.style.maxWidth = '150px';
      img.style.maxHeight = '150px';
      img.classList.add('img-thumbnail');
      document.getElementById('imagePreviews').appendChild(img);
    };
    reader.readAsDataURL(file);
  }

  function setupImagePreview(input) {
    input.addEventListener('change', function () {
      for (let file of input.files) {
        createPreview(file);
      }
    });
  }

  // Setup for initial file input
  const initialInput = document.querySelector('#imageUploads input[type="file"]');
  setupImagePreview(initialInput);

  // Add new file input
  document.getElementById('addImage').addEventListener('click', function () {
    const imageUploads = document.getElementById('imageUploads');
    const newInput = document.createElement('input');
    newInput.type = 'file';
    newInput.name = 'images';
    newInput.accept = 'image/*';
    newInput.classList.add('form-control', 'mt-2');
    imageUploads.appendChild(newInput);
    setupImagePreview(newInput);
  });
</script>